/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type EpochAccountStatus = {
  epochState: number;
  weightTable: number;
  epochSnapshot: number;
  operatorSnapshot: ReadonlyUint8Array;
  ballotBox: number;
  baseRewardRouter: number;
  ncnRewardRouter: ReadonlyUint8Array;
};

export type EpochAccountStatusArgs = EpochAccountStatus;

export function getEpochAccountStatusEncoder(): Encoder<EpochAccountStatusArgs> {
  return getStructEncoder([
    ['epochState', getU8Encoder()],
    ['weightTable', getU8Encoder()],
    ['epochSnapshot', getU8Encoder()],
    ['operatorSnapshot', fixEncoderSize(getBytesEncoder(), 256)],
    ['ballotBox', getU8Encoder()],
    ['baseRewardRouter', getU8Encoder()],
    ['ncnRewardRouter', fixEncoderSize(getBytesEncoder(), 2048)],
  ]);
}

export function getEpochAccountStatusDecoder(): Decoder<EpochAccountStatus> {
  return getStructDecoder([
    ['epochState', getU8Decoder()],
    ['weightTable', getU8Decoder()],
    ['epochSnapshot', getU8Decoder()],
    ['operatorSnapshot', fixDecoderSize(getBytesDecoder(), 256)],
    ['ballotBox', getU8Decoder()],
    ['baseRewardRouter', getU8Decoder()],
    ['ncnRewardRouter', fixDecoderSize(getBytesDecoder(), 2048)],
  ]);
}

export function getEpochAccountStatusCodec(): Codec<
  EpochAccountStatusArgs,
  EpochAccountStatus
> {
  return combineCodec(
    getEpochAccountStatusEncoder(),
    getEpochAccountStatusDecoder()
  );
}
