/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBoolDecoder,
  getBoolEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type Ballot = {
  metaMerkleRoot: ReadonlyUint8Array;
  isInitialized: number;
  reserved: ReadonlyUint8Array;
};

export type BallotArgs = Ballot;

export function getBallotEncoder(): Encoder<BallotArgs> {
  return getStructEncoder([
    ['metaMerkleRoot', fixEncoderSize(getBytesEncoder(), 32)],
    ['isInitialized', getBoolEncoder()],
    ['reserved', fixEncoderSize(getBytesEncoder(), 63)],
  ]);
}

export function getBallotDecoder(): Decoder<Ballot> {
  return getStructDecoder([
    ['metaMerkleRoot', fixDecoderSize(getBytesDecoder(), 32)],
    ['isInitialized', getBoolDecoder()],
    ['reserved', fixDecoderSize(getBytesDecoder(), 63)],
  ]);
}

export function getBallotCodec(): Codec<BallotArgs, Ballot> {
  return combineCodec(getBallotEncoder(), getBallotDecoder());
}
