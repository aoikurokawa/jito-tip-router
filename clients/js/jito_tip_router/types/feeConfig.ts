/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import { getFeesDecoder, getFeesEncoder, type Fees, type FeesArgs } from '.';

export type FeeConfig = {
  blockEngineFeeBps: number;
  baseFeeWallets: Array<Address>;
  reserved: ReadonlyUint8Array;
  fee1: Fees;
  fee2: Fees;
};

export type FeeConfigArgs = {
  blockEngineFeeBps: number;
  baseFeeWallets: Array<Address>;
  reserved: ReadonlyUint8Array;
  fee1: FeesArgs;
  fee2: FeesArgs;
};

export function getFeeConfigEncoder(): Encoder<FeeConfigArgs> {
  return getStructEncoder([
    ['blockEngineFeeBps', getU16Encoder()],
    ['baseFeeWallets', getArrayEncoder(getAddressEncoder(), { size: 8 })],
    ['reserved', fixEncoderSize(getBytesEncoder(), 128)],
    ['fee1', getFeesEncoder()],
    ['fee2', getFeesEncoder()],
  ]);
}

export function getFeeConfigDecoder(): Decoder<FeeConfig> {
  return getStructDecoder([
    ['blockEngineFeeBps', getU16Decoder()],
    ['baseFeeWallets', getArrayDecoder(getAddressDecoder(), { size: 8 })],
    ['reserved', fixDecoderSize(getBytesDecoder(), 128)],
    ['fee1', getFeesDecoder()],
    ['fee2', getFeesDecoder()],
  ]);
}

export function getFeeConfigCodec(): Codec<FeeConfigArgs, FeeConfig> {
  return combineCodec(getFeeConfigEncoder(), getFeeConfigDecoder());
}
